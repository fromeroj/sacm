// SACM Calculator 2017 - Pure JavaScript Implementation
// Based on official SACM 2017 Tariff

// SACM 2017 Constants
const UDA_VALUE_2017 = 88.36; // Pesos mexicanos

// SACM Tariff Data (from PDF)
const SACM_TARIFFS = {
    // Restaurantes, Bares, Cantinas (Sección B)
    restaurante: {
        seccion: 'B',
        categoria: 'Restaurantes, Bares y Cantinas',
        base_calculo: 'mensual',
        tarifa: {
            grabada: {
                '1-20': 4,    // UDAs por mes
                '21-40': 8,
                '41-60': 10.5,
                '61+': 12
            },
            vivo: {
                sin_entrada: {
                    '1-20': 2,
                    '21-40': 4,
                    '41+': 6
                },
                con_entrada: {
                    '1-20': 4,
                    '21-40': 6,
                    '41+': 8
                }
            },
            baile: {
                minimo: 8,  // UDAs mínimo cuando hay baile
                '1-20': 8,
                '21-40': 10,
                '41+': 12
            }
        }
    },

    // Hoteles (Sección C)
    hotel: {
        seccion: 'C',
        categoria: 'Hoteles y Moteles',
        base_calculo: 'mensual',
        tarifa: {
            normal: {
                '1': { '1-50': 8, '51-100': 12, '101-200': 18, '201+': 25 },
                '2': { '1-50': 10, '51-100': 15, '101-200': 22, '201+': 30 },
                '3': { '1-50': 12, '51-100': 18, '101-200': 26, '201+': 35 },
                '4': { '1-50': 15, '51-100': 22, '101-200': 32, '201+': 42 },
                '5': { '1-50': 18, '51-100': 26, '101-200': 38, '201+': 50 },
                'gran_turismo': { '1-50': 22, '51-100': 32, '101-200': 46, '201+': 60 }
            },
            zona_turistica: {
                '1': { '1-50': 10, '51-100': 15, '101-200': 22, '201+': 30 },
                '2': { '1-50': 12, '51-100': 18, '101-200': 26, '201+': 35 },
                '3': { '1-50': 15, '51-100': 22, '101-200': 32, '201+': 42 },
                '4': { '1-50': 18, '51-100': 26, '101-200': 38, '201+': 50 },
                '5': { '1-50': 22, '51-100': 32, '101-200': 46, '201+': 60 },
                'gran_turismo': { '1-50': 26, '51-100': 38, '101-200': 54, '201+': 70 }
            }
        }
    },

    // Discotecas (Sección D)
    discoteca: {
        seccion: 'D',
        categoria: 'Discotecas y Antros',
        base_calculo: 'diario',
        tarifa: {
            general: {
                '1-100': 8,
                '101-250': 15,
                '251-500': 20,
                '501+': 25
            },
            zonas_especiales: {
                '1-100': 12,
                '101-250': 20,
                '251-500': 25,
                '501+': 30
            }
        }
    },

    // Centros Nocturnos (Sección E)
    centro_nocturno: {
        seccion: 'E',
        categoria: 'Centros Nocturnos',
        base_calculo: 'mensual',
        tarifa: {
            general: {
                '1-20': 15,
                '21-40': 25,
                '41+': 35
            },
            zonas_especiales: {
                '1-20': 20,
                '21-40': 30,
                '41+': 40
            }
        }
    },

    // Parques Acuáticos (Sección H)
    parque_acuatico: {
        seccion: 'H',
        categoria: 'Parques Acuáticos y Balnearios',
        base_calculo: 'mensual',
        tarifa: {
            grabada: {
                '1': 8,
                '2': 12,
                '3': 16,
                '4+': 20
            },
            vivo: {
                '1': 12,
                '2': 18,
                '3': 24,
                '4+': 30
            }
        }
    },

    // Karaoke (Sección I)
    karaoke: {
        seccion: 'I',
        categoria: 'Karaoke',
        base_calculo: 'mensual',
        tarifa: {
            '1-20': 10,
            '21-40': 15,
            '41+': 20
        }
    }
};

// DOM Elements
const form = document.getElementById('sacm-form');
const formSection = document.getElementById('form-section');
const loadingSection = document.getElementById('loading-section');
const resultsSection = document.getElementById('results-section');
const resultContent = document.getElementById('result-content');
const newCalculationBtn = document.getElementById('new-calculation');

// Form fields
const tipoSelect = document.getElementById('tipo');
const mesasField = document.getElementById('mesas-field');
const personasField = document.getElementById('personas-field');
const habitacionesField = document.getElementById('habitaciones-field');
const albercasField = document.getElementById('albercas-field');
const hotelSection = document.getElementById('hotel-section');
const temporadaField = document.getElementById('temporada-field');
const baileField = document.getElementById('baile-field');
const zonaGeograficaSelect = document.getElementById('zonaGeografica');

// Initialize
document.addEventListener('DOMContentLoaded', function() {
    setupEventListeners();
    updateConditionalFields();
});

// Event Listeners
function setupEventListeners() {
    form.addEventListener('submit', handleFormSubmit);
    tipoSelect.addEventListener('change', updateConditionalFields);
    zonaGeograficaSelect.addEventListener('change', updateTemporadaField);
    newCalculationBtn.addEventListener('click', resetForm);
}

// Update conditional fields based on establishment type
function updateConditionalFields() {
    const tipo = tipoSelect.value;
    
    // Hide all conditional fields first
    hideAllConditionalFields();
    
    // Show relevant fields based on type
    switch (tipo) {
        case 'Restaurante':
        case 'Bar':
        case 'Cantina':
            showField(mesasField);
            showField(baileField);
            setRequired('capacidadMesas', true);
            break;
            
        case 'Karaoke':
            showField(mesasField);
            setRequired('capacidadMesas', true);
            break;
            
        case 'Hotel':
        case 'Motel':
            showField(habitacionesField);
            showField(hotelSection);
            setRequired('capacidadHabitaciones', true);
            setRequired('hotelEstrellas', true);
            break;
            
        case 'Discoteca':
        case 'Antro':
            showField(personasField);
            setRequired('capacidadPersonas', true);
            updateTemporadaField();
            break;
            
        case 'Centro Nocturno':
            showField(mesasField);
            setRequired('capacidadMesas', true);
            break;
            
        case 'Parque Acuático':
        case 'Balneario':
            showField(albercasField);
            setRequired('numeroAlbercas', true);
            break;
    }
}

// Update temporada field visibility
function updateTemporadaField() {
    const tipo = tipoSelect.value;
    const zona = zonaGeograficaSelect.value;
    
    if ((tipo === 'Discoteca' || tipo === 'Antro') && 
        ['cdmx', 'guadalajara', 'monterrey'].includes(zona)) {
        showField(temporadaField);
    } else {
        hideField(temporadaField);
    }
}

// Helper functions for field visibility
function hideAllConditionalFields() {
    const conditionalFields = document.querySelectorAll('.conditional-field');
    conditionalFields.forEach(field => hideField(field));
    
    // Reset required fields
    setRequired('capacidadMesas', false);
    setRequired('capacidadPersonas', false);
    setRequired('capacidadHabitaciones', false);
    setRequired('numeroAlbercas', false);
    setRequired('hotelEstrellas', false);
}

function showField(element) {
    element.style.display = 'block';
    element.classList.add('show');
}

function hideField(element) {
    element.style.display = 'none';
    element.classList.remove('show');
}

function setRequired(fieldId, required) {
    const field = document.getElementById(fieldId);
    if (field) {
        field.required = required;
    }
}

// Handle form submission
function handleFormSubmit(e) {
    e.preventDefault();
    
    showSection('loading');
    
    // Simulate loading delay for better UX
    setTimeout(() => {
        try {
            const formData = collectFormData();
            const result = calculateSACMTariff(formData);
            displayResults(result, formData);
            showSection('results');
        } catch (error) {
            console.error('Error:', error);
            alert('Error al calcular la tarifa SACM: ' + error.message);
            showSection('form');
        }
    }, 1000);
}

// Collect form data
function collectFormData() {
    const formData = new FormData(form);
    const data = {};
    
    for (let [key, value] of formData.entries()) {
        data[key] = value;
    }
    
    return data;
}

// Calculate SACM Tariff
function calculateSACMTariff(data) {
    const tipo = data.tipo;
    const tipoMusica = data.tipoMusica;
    const cobraEntrada = data.cobraEntrada;
    const permiteBaile = data.permiteBaile;
    const zonaGeografica = data.zonaGeografica;
    
    let tariffData, udas, detalles = [];
    
    switch (tipo) {
        case 'Restaurante':
        case 'Bar':
        case 'Cantina':
            tariffData = SACM_TARIFFS.restaurante;
            const mesas = parseInt(data.capacidadMesas);
            
            if (permiteBaile === 'si') {
                // Con baile - tarifas especiales
                if (mesas <= 20) udas = tariffData.tarifa.baile['1-20'];
                else if (mesas <= 40) udas = tariffData.tarifa.baile['21-40'];
                else udas = tariffData.tarifa.baile['41+'];
                
                detalles.push(`Establecimiento con baile: ${mesas} mesas`);
                detalles.push(`Tarifa aplicada: ${udas} UDAs por mes`);
            } else if (tipoMusica === 'vivo') {
                // Solo música en vivo
                const tarifaVivo = cobraEntrada === 'si' ? 
                    tariffData.tarifa.vivo.con_entrada : 
                    tariffData.tarifa.vivo.sin_entrada;
                
                if (mesas <= 20) udas = tarifaVivo['1-20'];
                else if (mesas <= 40) udas = tarifaVivo['21-40'];
                else udas = tarifaVivo['41+'];
                
                detalles.push(`Música en vivo, ${cobraEntrada === 'si' ? 'con' : 'sin'} entrada: ${mesas} mesas`);
            } else {
                // Música grabada
                if (mesas <= 20) udas = tariffData.tarifa.grabada['1-20'];
                else if (mesas <= 40) udas = tariffData.tarifa.grabada['21-40'];
                else if (mesas <= 60) udas = tariffData.tarifa.grabada['41-60'];
                else udas = tariffData.tarifa.grabada['61+'];
                
                detalles.push(`Música grabada: ${mesas} mesas`);
            }
            break;
            
        case 'Hotel':
        case 'Motel':
            tariffData = SACM_TARIFFS.hotel;
            const habitaciones = parseInt(data.capacidadHabitaciones);
            const estrellas = data.hotelEstrellas;
            const zonaTuristica = data.zonaTuristica === 'si';
            
            const hotelTarifa = zonaTuristica ? 
                tariffData.tarifa.zona_turistica[estrellas] : 
                tariffData.tarifa.normal[estrellas];
            
            if (habitaciones <= 50) udas = hotelTarifa['1-50'];
            else if (habitaciones <= 100) udas = hotelTarifa['51-100'];
            else if (habitaciones <= 200) udas = hotelTarifa['101-200'];
            else udas = hotelTarifa['201+'];
            
            detalles.push(`Hotel ${estrellas} estrellas, ${habitaciones} habitaciones`);
            detalles.push(`${zonaTuristica ? 'Zona turística' : 'Zona normal'}`);
            break;
            
        case 'Discoteca':
        case 'Antro':
            tariffData = SACM_TARIFFS.discoteca;
            const personas = parseInt(data.capacidadPersonas);
            const esZonaEspecial = ['cdmx', 'guadalajara', 'monterrey'].includes(zonaGeografica);
            
            const discoTarifa = esZonaEspecial ? 
                tariffData.tarifa.zonas_especiales : 
                tariffData.tarifa.general;
            
            if (personas <= 100) udas = discoTarifa['1-100'];
            else if (personas <= 250) udas = discoTarifa['101-250'];
            else if (personas <= 500) udas = discoTarifa['251-500'];
            else udas = discoTarifa['501+'];
            
            detalles.push(`Discoteca ${personas} personas`);
            detalles.push(`${esZonaEspecial ? 'Zona especial' : 'República general'}`);
            if (esZonaEspecial) {
                const temporada = data.temporada || 'alta';
                detalles.push(`Temporada ${temporada}`);
            }
            break;
            
        case 'Centro Nocturno':
            tariffData = SACM_TARIFFS.centro_nocturno;
            const mesasCentro = parseInt(data.capacidadMesas);
            const esZonaEspecialCentro = ['cdmx', 'guadalajara', 'monterrey'].includes(zonaGeografica);
            
            const centroTarifa = esZonaEspecialCentro ? 
                tariffData.tarifa.zonas_especiales : 
                tariffData.tarifa.general;
            
            if (mesasCentro <= 20) udas = centroTarifa['1-20'];
            else if (mesasCentro <= 40) udas = centroTarifa['21-40'];
            else udas = centroTarifa['41+'];
            
            detalles.push(`Centro nocturno ${mesasCentro} mesas`);
            detalles.push(`${esZonaEspecialCentro ? 'Zona especial' : 'República general'}`);
            break;
            
        case 'Parque Acuático':
        case 'Balneario':
            tariffData = SACM_TARIFFS.parque_acuatico;
            const albercas = parseInt(data.numeroAlbercas);
            
            const parqueTarifa = tipoMusica === 'vivo' ? 
                tariffData.tarifa.vivo : 
                tariffData.tarifa.grabada;
            
            if (albercas === 1) udas = parqueTarifa['1'];
            else if (albercas === 2) udas = parqueTarifa['2'];
            else if (albercas === 3) udas = parqueTarifa['3'];
            else udas = parqueTarifa['4+'];
            
            detalles.push(`Parque acuático ${albercas} alberca(s)`);
            detalles.push(`Música ${tipoMusica}`);
            break;
            
        case 'Karaoke':
            tariffData = SACM_TARIFFS.karaoke;
            const mesasKaraoke = parseInt(data.capacidadMesas);
            
            if (mesasKaraoke <= 20) udas = tariffData.tarifa['1-20'];
            else if (mesasKaraoke <= 40) udas = tariffData.tarifa['21-40'];
            else udas = tariffData.tarifa['41+'];
            
            detalles.push(`Karaoke ${mesasKaraoke} mesas`);
            break;
            
        default:
            throw new Error('Tipo de establecimiento no soportado');
    }
    
    const costoTotal = udas * UDA_VALUE_2017;
    
    return {
        categoria: tariffData.categoria,
        seccion: tariffData.seccion,
        base_calculo: tariffData.base_calculo,
        udas: udas,
        uda_value: UDA_VALUE_2017,
        costo_pesos: costoTotal,
        detalles: detalles
    };
}

// Display calculation results
function displayResults(result, formData) {
    resultContent.innerHTML = `
        <div class="results-container">
            <!-- Summary Card -->
            <div class="result-summary-card">
                <div class="summary-header">
                    <h3><i class="fas fa-check-circle"></i> Cálculo Completado</h3>
                    <div class="establishment-name">${formData.nombre}</div>
                </div>
                
                <div class="cost-display">
                    <div class="cost-main">
                        <span class="cost-amount">$${result.costo_pesos.toFixed(2)}</span>
                        <span class="cost-currency">MXN</span>
                    </div>
                    <div class="cost-period">por ${result.base_calculo === 'mensual' ? 'mes' : 'día'}</div>
                    <div class="cost-breakdown-mini">
                        ${result.udas} UDAs × $${result.uda_value} = $${result.costo_pesos.toFixed(2)}
                    </div>
                </div>

                <div class="action-buttons">
                    <button class="btn-primary" onclick="showContractReview()">
                        <i class="fas fa-file-contract"></i>
                        Revisar Contrato
                    </button>
                    <button class="btn-success" onclick="proceedToPayment()">
                        <i class="fas fa-credit-card"></i>
                        Proceder al Pago
                    </button>
                </div>
            </div>

            <!-- Details Grid -->
            <div class="results-grid">
                <!-- Establishment Info -->
                <div class="result-card">
                    <div class="card-header">
                        <h4><i class="fas fa-building"></i> Información del Establecimiento</h4>
                    </div>
                    <div class="card-content">
                        <div class="info-row">
                            <span class="info-label">Nombre:</span>
                            <span class="info-value">${formData.nombre}</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Tipo:</span>
                            <span class="info-value">${formData.tipo}</span>
                        </div>
                        ${formData.direccion ? `
                        <div class="info-row">
                            <span class="info-label">Dirección:</span>
                            <span class="info-value">${formData.direccion}</span>
                        </div>
                        ` : ''}
                        <div class="info-row">
                            <span class="info-label">Zona:</span>
                            <span class="info-value">${getZonaText(formData.zonaGeografica)}</span>
                        </div>
                    </div>
                </div>

                <!-- SACM Calculation -->
                <div class="result-card">
                    <div class="card-header">
                        <h4><i class="fas fa-calculator"></i> Cálculo SACM 2017</h4>
                    </div>
                    <div class="card-content">
                        <div class="info-row">
                            <span class="info-label">Categoría:</span>
                            <span class="info-value">${result.categoria}</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Sección:</span>
                            <span class="info-value badge-section">${result.seccion}</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Base de Cálculo:</span>
                            <span class="info-value badge-period">${result.base_calculo}</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">UDAs Aplicadas:</span>
                            <span class="info-value badge-udas">${result.udas}</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Valor UDA 2017:</span>
                            <span class="info-value">$${result.uda_value} MXN</span>
                        </div>
                    </div>
                </div>

                <!-- Calculation Details -->
                <div class="result-card full-width">
                    <div class="card-header">
                        <h4><i class="fas fa-list-ul"></i> Detalles del Cálculo</h4>
                    </div>
                    <div class="card-content">
                        <div class="details-grid">
                            ${result.detalles.map(detalle => `
                                <div class="detail-item">
                                    <i class="fas fa-check"></i>
                                    <span>${detalle}</span>
                                </div>
                            `).join('')}
                            <div class="detail-item calculation-final">
                                <i class="fas fa-equals"></i>
                                <span><strong>Cálculo final: ${result.udas} UDAs × $${result.uda_value} = $${result.costo_pesos.toFixed(2)} MXN</strong></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Legal Information -->
                <div class="result-card full-width legal-card">
                    <div class="card-header">
                        <h4><i class="fas fa-info-circle"></i> Información Legal Importante</h4>
                    </div>
                    <div class="card-content">
                        <div class="legal-notice">
                            <div class="notice-item">
                                <i class="fas fa-document-text"></i>
                                <span>Este cálculo está basado en el <strong>Tarifario SACM 2017</strong> oficial</span>
                            </div>
                            <div class="notice-item">
                                <i class="fas fa-copyright"></i>
                                <span>Los costos son exclusivamente para <strong>derechos de autor (SACM)</strong></span>
                            </div>
                            <div class="notice-item">
                                <i class="fas fa-phone"></i>
                                <span>Para la licencia oficial, contacte directamente a <strong>SACM: www.sacm.org.mx</strong></span>
                            </div>
                            <div class="notice-item warning">
                                <i class="fas fa-exclamation-triangle"></i>
                                <span>Las tarifas pueden haber cambiado después de 2017. Verificar con SACM antes del pago.</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;
}

// Helper function for zone text
function getZonaText(zona) {
    const zonas = {
        'general': 'República General',
        'cdmx': 'Ciudad de México (D.F.)',
        'guadalajara': 'Guadalajara, Jalisco',
        'monterrey': 'Monterrey, Nuevo León'
    };
    return zonas[zona] || zona;
}

// Show contract review
function showContractReview() {
    alert('🔄 Funcionalidad en desarrollo\n\nEsta función mostrará:\n• Contrato detallado en PDF\n• Términos y condiciones\n• Información de la licencia\n• Datos del establecimiento');
}

// Proceed to payment
function proceedToPayment() {
    alert('💳 Funcionalidad en desarrollo\n\nEsta función incluirá:\n• Pasarela de pago segura\n• Métodos de pago (tarjeta, transferencia)\n• Confirmación de pago\n• Generación de licencia oficial\n\nPor ahora, contacte directamente a SACM:\nwww.sacm.org.mx');
}

// Reset form for new calculation
function resetForm() {
    form.reset();
    updateConditionalFields();
    showSection('form');
}

// Show specific section
function showSection(section) {
    // Hide all sections
    formSection.style.display = 'none';
    loadingSection.style.display = 'none';
    resultsSection.style.display = 'none';
    
    // Show requested section
    switch (section) {
        case 'form':
            formSection.style.display = 'block';
            break;
        case 'loading':
            loadingSection.style.display = 'block';
            break;
        case 'results':
            resultsSection.style.display = 'block';
            break;
    }
    
    // Scroll to top
    window.scrollTo({ top: 0, behavior: 'smooth' });
}

